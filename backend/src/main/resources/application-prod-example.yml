server:
  port: BACKEND_API_PORT
  allowed-origin-patterns: http://localhost:8080,https://example.com
spring:
  datasource:
    url: jdbc:mysql://host:port/schema
    username: user
    password: password
  jpa:
    hibernate:
      # Replace with 'validate' or 'none' after schema is initialized
      ddl-auto: create
  mail:
    host: smtp.example.com
    username: user
    password: password
    port: 465
    protocol: smtps
  session:
    timeout: 24h
    jdbc:
      initialize-schema: always
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
homerep:
  email-templates:
    email-verification: file:/abs/path/to/actual-templates/email-verification.eml
    reset-password: file:/abs/path/to/actual-templates/template.eml
    email-request: file:/abs/path/to/actual-templates/template.eml
    email-request-accepted: file:/abs/path/to/actual-templates/template.eml
    appointment-created: file:/abs/path/to/actual-templates/template.eml
    appointment-confirmed: file:/abs/path/to/actual-templates/template.eml
    appointment-cancelled-by-customer: file:/abs/path/to/actual-templates/template.eml
    appointment-cancelled-by-provider: file:/abs/path/to/actual-templates/template.eml
  image-storage:
    quality: 90.0
    storage-root: ./image-storage-root
  geocoding:
    google-maps-api-key: API_KEY
    # nominatim-url: http://your-local-instance:8090
  require-verification: true
  service-request:
    images:
      max-num-pictures: 10
      max-size-pixels: 1920
management:
  server:
    # Accessible only via tunnel or on server
    address: 127.0.0.1
    port: BACKEND_MANAGEMENT_PORT
  influx:
    metrics:
      export:
        uri: "http://localhost:8086"
        api-version: v2
        org: ORGANIZATION
        bucket: BUCKET_NAME
        token: API_TOKEN
        enabled: true